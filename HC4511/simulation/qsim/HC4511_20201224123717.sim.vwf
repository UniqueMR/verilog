/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D";
}

SIGNAL("LE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

TRANSITION_LIST("BL")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 850.0;
		}
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
			LEVEL 0 FOR 93.75;
			LEVEL 1 FOR 31.25;
		}
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 33.75;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("LE")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 930.0;
		}
	}
}

TRANSITION_LIST("LT")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 190.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 780.0;
		}
	}
}

TRANSITION_LIST("Y[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 1 FOR 23.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 28.75;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 8.75;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 31.25;
			LEVEL 1 FOR 45.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 8.75;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 13.75;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 18.75;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("Y[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 45.0;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 18.75;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 1.25;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 22.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 8.75;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("Y[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 1 FOR 23.75;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 75.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 75.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 75.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 43.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("Y[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 1 FOR 23.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 62.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 42.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 22.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 8.75;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 31.25;
			LEVEL 1 FOR 45.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 1.25;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 16.25;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 13.75;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 18.75;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 31.25;
		}
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 3.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 1.25;
			LEVEL 0 FOR 78.75;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 95.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 78.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 78.75;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 78.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 88.75;
		}
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 1 FOR 23.75;
			LEVEL 0 FOR 81.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 42.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 22.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 38.75;
			LEVEL 1 FOR 51.25;
			LEVEL 0 FOR 11.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 1.25;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 22.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 43.75;
			LEVEL 0 FOR 18.75;
			LEVEL 1 FOR 3.75;
			LEVEL 0 FOR 33.75;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 13.75;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 31.25;
		}
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 70.0;
			LEVEL 1 FOR 23.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 62.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 42.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 22.5;
			LEVEL 1 FOR 11.25;
			LEVEL 0 FOR 3.75;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 43.75;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 37.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 6.25;
			LEVEL 0 FOR 1.25;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 43.75;
			LEVEL 0 FOR 6.25;
			LEVEL 1 FOR 16.25;
			LEVEL 0 FOR 58.75;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 12.5;
			LEVEL 1 FOR 18.75;
			LEVEL 0 FOR 31.25;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "LE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Y";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "Y[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
