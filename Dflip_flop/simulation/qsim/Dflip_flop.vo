// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "12/08/2020 15:53:32"

// 
// Device: Altera 5M40ZM64C4 Package MBGA64
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Dflip_flop (
	D,
	CP,
	Q,
	Qnot);
input 	D;
input 	CP;
output 	Q;
output 	Qnot;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CP~combout ;
wire \D~combout ;
wire \Q~reg0_regout ;
wire \Qnot~reg0_regout ;


// Location: PIN_E2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \CP~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\CP~combout ),
	.padio(CP));
// synopsys translate_off
defparam \CP~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_F8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \D~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\D~combout ),
	.padio(D));
// synopsys translate_off
defparam \D~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y2_N2
maxv_lcell \Q~reg0 (
// Equation(s):
// \Q~reg0_regout  = DFFEAS(GND, GLOBAL(\CP~combout ), VCC, , , \D~combout , , , VCC)

	.clk(\CP~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\D~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\Q~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Q~reg0 .lut_mask = "0000";
defparam \Q~reg0 .operation_mode = "normal";
defparam \Q~reg0 .output_mode = "reg_only";
defparam \Q~reg0 .register_cascade_mode = "off";
defparam \Q~reg0 .sum_lutc_input = "datac";
defparam \Q~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N7
maxv_lcell \Qnot~reg0 (
// Equation(s):
// \Qnot~reg0_regout  = DFFEAS((((!\D~combout ))), GLOBAL(\CP~combout ), VCC, , , , , , )

	.clk(\CP~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\D~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\Qnot~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Qnot~reg0 .lut_mask = "0f0f";
defparam \Qnot~reg0 .operation_mode = "normal";
defparam \Qnot~reg0 .output_mode = "reg_only";
defparam \Qnot~reg0 .register_cascade_mode = "off";
defparam \Qnot~reg0 .sum_lutc_input = "datac";
defparam \Qnot~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_D8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Q~I (
	.datain(\Q~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(Q));
// synopsys translate_off
defparam \Q~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_G8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Qnot~I (
	.datain(\Qnot~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(Qnot));
// synopsys translate_off
defparam \Qnot~I .operation_mode = "output";
// synopsys translate_on

endmodule
